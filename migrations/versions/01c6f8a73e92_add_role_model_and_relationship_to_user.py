"""Add Role model and relationship to User

Revision ID: 01c6f8a73e92
Revises: df775009969a
Create Date: 2025-04-23 22:38:37.300985

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '01c6f8a73e92'
down_revision = 'df775009969a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_role')), # Добавлено имя для PK
        sa.UniqueConstraint('name', name=op.f('uq_role_name')) # Добавлено имя для Unique
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Добавляем колонку, разрешая NULL (важно для существующих записей)
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=True))
        # Создаем внешний ключ с ЯВНЫМ ИМЕНЕМ
        batch_op.create_foreign_key(
            batch_op.f('fk_user_role_id_role'), # <--- ЗАДАЕМ ИМЯ
            'role',
            ['role_id'],
            ['id']
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Удаляем внешний ключ по ИМЕНИ
        batch_op.drop_constraint(
            batch_op.f('fk_user_role_id_role'), # <--- УКАЗЫВАЕМ ТО ЖЕ ИМЯ
            type_='foreignkey'
        )
        batch_op.drop_column('role_id')

    op.drop_table('role')
    # ### end Alembic commands ###